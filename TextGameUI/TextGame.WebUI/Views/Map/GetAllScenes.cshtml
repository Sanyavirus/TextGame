@using TextGame.Engine.Entities
@model List<Scene>;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scene List</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .scene-list {
            height: 100%;
            overflow-y: auto;
        }

        .scene-info {
            border-left: 1px solid #ccc;
            padding-left: 20px;
        }

            .scene-info h2 {
                margin-top: 0;
            }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <h2>Scene List</h2>
                <div class="list-group scene-list">
                    <!-- List of scenes will be populated here -->
                </div>
            </div>
            <div class="col-md-8">
                <div class="scene-info">
                    <h2>Scene Details</h2>
                    <form action="/Map/Edit" method="post">
                        <input type ="hidden" id="id" name="ID"/>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" name="Name" required>
                        </div>
                        <div class="mb-3">
                            <label for="hashtag" class="form-label">HashTag</label>
                            <input type="text" class="form-control" id="hashtag" name="HashTag">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="Description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="author" class="form-label">Author</label>
                            <input type="text" class="form-control" id="author" name="Author">
                        </div>
                        <div class="mb-3">
                            <label for="images" class="form-label">Images</label>
                            <input type="text" class="form-control" id="images" name="Images">
                            <small class="text-muted">Separate image URLs with commas</small>
                        </div>
                        <div class="mb-3">
                            <label for="delay" class="form-label">Delay</label>
                            <input type="number" class="form-control" id="delay" name="Delay">
                        </div>
                        <div class="mb-3">
                            <label for="sceneType" class="form-label">Scene Type</label>
                            <select class="form-select" id="sceneType" name="SceneType">
                                <option value="Static">Static</option>
                                <option value="Animated">Animated</option>
                                <!-- Add more options as needed -->
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Edit Scene</button>
                    </form>

                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>"
    <script>
        // Mock data for demonstration
        var scenes = [];
        $.ajax({
            url: '/Map/GetScenes',         /* Куда отправить запрос */
            method: 'get',             /* Метод запроса (post или get) */
            dataType: 'json',          /* Тип данных в ответе (xml, json, script, html). */
            success: function (data) {   /* функция которая будет выполнена после успешного запроса.  */
                scenes = data;
                var sceneList = document.querySelector(".scene-list");
                scenes.forEach(function (scene) {
                    var sceneItem = document.createElement("a");
                    sceneItem.classList.add("list-group-item", "list-group-item-action");
                    sceneItem.innerText = scene.name;
                    sceneItem.href = "#";
                    sceneItem.onclick = function () {
                        populateSceneDetails(scene);
                    };  
                    sceneList.appendChild(sceneItem);
                });
            }
        });

        // Function to populate scene details based on selected scene
        function populateSceneDetails(scene) {
            $.ajax({
                url: '/Map/Get?id='+scene.id,         /* Куда отправить запрос */
                method: 'get',             /* Метод запроса (post или get) */
                dataType: 'json',          /* Тип данных в ответе (xml, json, script, html). */
                success: function (data) {   /* функция которая будет выполнена после успешного запроса.  */
                    scene = data;
                }
            });
            document.getElementById("id").value = scene.id;
            document.getElementById("name").value= scene.name;
            document.getElementById("hashtag").value = scene.hashTag;
            document.getElementById("description").innerText = scene.description;
            //document.getElementById("images").innerText = scene.Images.join(", ");
            document.getElementById("author").innerText = scene.author;
            document.getElementById("delay").innerText = scene.delay;
            document.getElementById("sceneType").innerText = scene.sceneType;

        }

        // Function to populate scene list
        function populateSceneList() {
            var sceneList = document.querySelector(".scene-list");
            scenes.forEach(function (scene) {
                var sceneItem = document.createElement("a");
                sceneItem.classList.add("list-group-item", "list-group-item-action");
                sceneItem.innerText = scene.name;
                sceneItem.href = "#";
                sceneItem.onclick = function () {
                    populateSceneDetails(scene);
                };
                sceneList.appendChild(sceneItem);
            });
        }

        // Populate scene list on page load
            populateSceneList();
    </script>
</body>
</html>
